version: 2
jobs:
  Development:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "infraparcial"
      - GOOGLE_PROJECT_ID: "infraparcial"
      - GOOGLE_COMPUTE_ZONE: "us-central1-f"
      - GOOGLE_CLUSTER_NAME: "gke-us"
    steps:
      - checkout
      - run: 
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}	
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run: 
          name: Deploy to Kubernetes
          command: |
            kubectl delete all --all
            kubectl apply -f ${HOME}/project/deployment.yaml
            kubectl apply -f ${HOME}/project/service.yaml
            kubectl apply -f ${HOME}/project/ingress.yaml
  Production:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "infraparcial"
      - GOOGLE_PROJECT_ID: "infraparcial"
      - GOOGLE_COMPUTE_ZONE: "europe-west1-c"
      - GOOGLE_CLUSTER_NAME: "gke-eu"
    steps:
      - checkout
      - run: 
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}	
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}  
      - setup_remote_docker
      - run: 
          name: Deploy to Kubernetes
          command: |
            kubectl delete all --all
            kubectl apply -f ${HOME}/project/deployment.yaml
            kubectl apply -f ${HOME}/project/service.yaml
            kubectl apply -f ${HOME}/project/ingress.yaml

workflows:
  version: 2
  build:
    jobs:
      - Development:
          filters:
            branches:
              only: master
      - Manual-Approval:
          type: approval
          requires:
            - Development
      - Production:
          requires:
            - Manual-Approval
          filters:
            branches:
              only: master   
